fail_fast: false
repos:
  - repo: local
    hooks:
      - id: git-secret
        name: Use git-secret to hide MY secrets
        stages: [commit]
        language: system
        entry: git-secret hide -m
        pass_filenames: false
        always_run: true

  - repo: https://github.com/rhysd/actionlint
    rev: v1.7.7
    hooks:
      - id: actionlint
        args: ["-color", "-shellcheck="]

  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.97.1
    hooks:
      - id: terraform_validate
      - id: terraform_tflint
      - id: terraform_fmt
      - id: terraform_docs
        args:
          - --args=--anchor=false
          - --args=--html=false

  - repo: https://github.com/python-poetry/poetry
    rev: 2.0.1
    hooks:
      - id: poetry-check
      - id: poetry-lock

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: end-of-file-fixer
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  - repo: https://github.com/PyCQA/docformatter
    rev: v1.7.5
    hooks:
      - id: docformatter
        args: ["--config", "pyproject.toml"]

  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black

  - repo: https://github.com/pycqa/flake8
    rev: 7.1.1
    hooks:
      - id: flake8

  - repo: https://github.com/pycqa/isort
    rev: 6.0.0
    hooks:
      - id: isort

  - repo: https://github.com/adamchainz/blacken-docs
    rev: 1.19.1
    hooks:
      - id: blacken-docs

  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
      - id: codespell
        args: ["--toml", "pyproject.toml"]

  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.2
    hooks:
      - id: bandit
        args: ["-c", "pyproject.toml"]
        additional_dependencies: ["bandit[toml]"]

  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.44.0
    hooks:
      - id: markdownlint
        args: [--fix]

  - repo: https://github.com/koalaman/shellcheck-precommit
    rev: v0.10.0
    hooks:
      - id: shellcheck
      #       args: ["--severity=warning"]  # Optionally only show errors and warnings

  - repo: https://github.com/dosisod/refurb
    rev: v2.0.0
    hooks:
      - id: refurb
        additional_dependencies: ["pydantic"]

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.19.1
    hooks:
      - id: pyupgrade

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.14.1
    hooks:
      - id: mypy
        args:
          [
            "--config-file",
            "pyproject.toml",
            --install-types,
            --non-interactive,
          ]
        additional_dependencies: ["pydantic"]

  - repo: local
    hooks:
      - id: validate-html
        name: validate html against w3c standards
        stages: [commit]
        language: system
        entry: python scripts/validate_html.py
        types: [html]
        pass_filenames: true
        always_run: false

  - repo: local
    hooks:
      - id: pytest
        name: pytest with coverage
        stages: [commit]
        language: system
        entry: zsh -c 'export ENVIRONMENT=testing && pytest --cov=ichrisbirch'
        types: [python]
        pass_filenames: false
        always_run: false
