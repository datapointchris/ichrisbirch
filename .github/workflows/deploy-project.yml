name: Deploy Project

on:
  workflow_run:
    workflows:
      - Validate Project
      - Check for Terraform Infrastructure Changes
    types: [completed]
  workflow_dispatch:

jobs:
  setup:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    name: Setup Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Retrieve Webserver Key and IP
      id: webserver-key-ip
      uses: ./.github/workflows/reusable-retrieve-webserver-key-and-ip.yml@main
    - name: Set SSH Command
      env:
        IP: ${{ steps.webserver-key-ip.outputs.webserver_ip }}
      run: |
        SSH_CMD="ssh -t -o StrictHostKeyChecking=no -i ${{ vars.SSH_KEY_FILENAME }} ubuntu@$IP"
        echo "SSH_CMD=$SSH_CMD" >> $GITHUB_ENV

  changed-files:
    name: Get Changed Files
    runs-on: ubuntu-latest
    outputs:
      db_any_changed: ${{ steps.changed-files.outputs.db_any_changed }}
      nginx_any_changed: ${{ steps.changed-files.outputs.nginx_any_changed }}
      supervisor_any_changed: ${{ steps.changed-files.outputs.supervisor_any_changed }}
      terraform_any_changed: ${{ steps.changed-files.outputs.terraform_any_changed }}
    steps:
      - uses: actions/checkout@v4
      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files_yaml: |
            db:
              - ichrisbirch/alembic/versions/*.py
            nginx:
              - deploy/prod/nginx/**
            supervisor:
              - deploy/prod/supervisor/**
            terraform:
              - terraform/**

  deploy:
    name: Pull and Re-install Project
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - run: |
          ${{ env.SSH_CMD }} '
            cd /var/www/ichrisbirch &&
            git pull &&
            git secret reveal -f &&
            sudo rm -rf .venv &&
            /etc/poetry/bin/poetry install --without dev,cicd
          '

  db-migrations:
    if: needs.changed-files.outputs.db_any_changed == 'true'
    name: Run Alembic Migrations
    runs-on: ubuntu-latest
    needs: [changed-files, deploy]
    steps:
      - run: |
          ${{ env.SSH_CMD }} '
            cd /var/www/ichrisbirch/ichrisbirch &&
            export ENVIRONMENT=production &&
            /var/www/ichrisbirch/.venv/bin/alembic upgrade head
          '

  nginx-config-deploy:
    if: needs.changed-files.outputs.nginx_any_changed == 'true'
    name: Run NGINX Deploy Script
    runs-on: ubuntu-latest
    needs: [changed-files, deploy]
    steps:
      - run: |
          ${{ env.SSH_CMD }} '
            cd /var/www/ichrisbirch/deploy &&
            export ENVIRONMENT=production &&
            ./deploy-nginx.sh
          '

  supervisor-config-deploy:
    if: needs.changed-files.outputs.supervisor_any_changed == 'true'
    name: Run Supervisor Deploy Script
    runs-on: ubuntu-latest
    needs: [changed-files, deploy]
    steps:
      - run: |
          ${{ env.SSH_CMD }} '
            cd /var/www/ichrisbirch/deploy &&
            export ENVIRONMENT=production &&
            ./deploy-supervisor.sh
          '

  supervisor-restart:
    name: Restart Supervisor
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - run: ${{ env.SSH_CMD }} 'sudo supervisorctl restart all'
