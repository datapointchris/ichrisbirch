name: Validate Project

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

# These permissions are needed to interact with GitHub's OIDC Token endpoint.
permissions:
  id-token: write
  contents: read

env:
  ENVIRONMENT: "testing"

defaults:
  run:
    shell: bash

jobs:
  lint:
    name: Lint Code
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
        python-version: ["3.12"]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Run shellcheck
        uses: ludeeus/action-shellcheck@master

      - name: Check Github Actions Workflow Files
        run: |
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          ./actionlint -color -shellcheck=""

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install UV
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Install CICD Dependencies
        run: uv sync --frozen --group test

      - name: Run ruff check
        uses: astral-sh/ruff-action@v3
        with:
          args: "check"

      - name: Run ruff format
        uses: astral-sh/ruff-action@v3
        with:
          args: "format --check"

      - name: Run mypy
        run: uv run mypy ichrisbirch --install-types --non-interactive --config-file pyproject.toml

      - name: Run bandit
        run: uv run bandit -c pyproject.toml .

      - name: Minimize uv cache
        run: uv cache prune --ci

  test:
    name: Run Tests
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
        python-version: ["3.12"]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Ubuntu Installs
        if: matrix.os == 'ubuntu-22.04' || matrix.os == 'ubuntu-24.04'
        run: |
          sudo apt update
          sudo apt install git-secret gpg -y

      - name: Setup Docker Compose
        uses: docker/setup-compose-action@v1
        with:
          version: "latest"

      - name: "git-secret Reveal .env files"
        run: |
          # Import private key and avoid the "Inappropriate ioctl for device" error
          echo ${{ secrets.CICD_GPG_KEY }} | tr ',' '\n' | gpg --batch --yes --pinentry-mode loopback --import
          git secret reveal

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install UV
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Install CICD Dependencies
        run: uv sync --frozen --group test

      - name: Install Playwright Browsers
        run: uv run playwright install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/github-actions-${{ github.event.repository.name }}-role
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create test logs directory
        run: mkdir -p test-logs

      - name: Run pytest with Coverage
        run: uv run pytest -s --cov=ichrisbirch

      - name: Minimize uv cache
        run: uv cache prune --ci
