[project]
name = "ichrisbirch"
version = "0.9.0"
description = "Playground for making fun and silly things"
authors = [{ name = "Chris Birch", email = "datapointchris@gmail.com" }]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.12,<3.13"
dependencies = [
    # Core runtime dependencies
    "alembic>=1.13.1",
    "apscheduler>=3.10.4",
    "attrs>=23.2.0",
    "beautifulsoup4>=4.12.3",
    "boto3>=1.34.98",
    "colorama>=0.4.6",
    "email_validator>=2.0.0",
    "fastapi>=0.111.0",
    "flask-login>=0.6.3",
    "flask-wtf>=1.2.1",
    "Flask>=3.0.3",
    "gunicorn>=22.0.0",
    "httpx>=0.27.0",
    "openai>=1.32.0",
    "pandas>=2.2.2",
    "pendulum>=3.0.0",
    "polars>=0.20.31",
    "psutil>=7.0.0",
    "psycopg>=3.1.19",
    "psycopg2-binary>=2.9.10",
    "pyarrow>=16.1.0",
    "pydantic>=2.7.1",
    "pygtail>=0.14.0",
    "pyjwt>=2.8.0",
    "python-dotenv>=1.0.1",
    "python-json-logger>=2.0.7",
    "python-multipart>=0.0.9",
    "pyyaml>=6.0.1",
    "redis>=5.2.1",
    "requests>=2.31.0",
    "sqlalchemy-json>=0.7.0",
    "sqlalchemy>=2.0.29",
    "streamlit-cookies-controller>=0.0.4",
    "streamlit>=1.41.1",
    "strenum>=0.4.15",
    "uvicorn>=0.29.0",
    "youtube-transcript-api>=0.6.2",
    "typer>=0.16.0",
    "rich>=14.1.0",
]

[project.urls]
Homepage = "https://www.ichrisbirch.com"
Documentation = "https://docs.ichrisbirch.com"
Repository = "https://github.com/datapointchris/ichrisbirch"

[dependency-groups]
dev = [
    # Development tools and linting
    "bandit>=1.7.8",
    "coverage>=7.5.0",
    "customtkinter>=5.2.2",
    "deptry>=0.16.1",
    "djlint>=1.36.4",
    "docformatter>=1.7.5",
    "graphviz>=0.20.3",
    "hvplot>=0.10.0",
    "interrogate>=1.7.0",
    "livereload>=2.6.3",
    "mypy>=1.10.0",
    "pydeps>=1.12.20",
    "ruff>=0.7.0",
    "tkhtmlview>=0.3.1",
    "wily>=1.25.0",
    # Documentation
    "Markdown>=3.6",
    "mkdocs-macros-plugin>=1.3.7",
    "mkdocs-material>=9.5.20",
    "mkdocstrings-python>=1.16.10",
    "mkdocstrings>=0.29.1",
    "pymdown-extensions>=10.8.1",
    # Type stubs for development
    "types-beautifulsoup4>=4.12.0.20250204",
    "types-markdown>=3.7.0.20241404",
    "types-redis>=4.6.0.20241004",
    "types-requests>=2.31.0.20240406",
    # Additional dev dependencies
    "boto3-stubs[cloudformation,dynamodb,ec2,lambda,rds,s3,sqs,ssm]>=1.37.34",
    "jupyter>=1.0.0",
    "jupyterthemes>=0.20.0",
    "docker>=7.1.0",
    "pre-commit>=4.3.0",
]
test = [
    # Testing framework and tools
    "pytest-playwright>=0.4.4",
    "pytest-asyncio>=0.23.6",
    "pytest-cov>=5.0.0",
    "pytest-md>=0.2.0",
    # Test data generation and mocking
    "Faker>=25.0.1",
    "freezegun>=1.5.1",
    "pytest>=8.4.1",
]


# ---------- Configurations ---------- #


[tool.bandit]
exclude_dirs = ["tests", "scripts"]
skips = ["B113", "B311"]


[tool.codespell]
skip = '*.css.map,*chat_history.json'
ignore-words-list = "astroid,aNULL,ANULL,anull,iterm"
exclude-file = "poetry.lock"
check-filenames = true
# count = ""
# quiet-level = 3


[tool.coverage.run]
parallel = true
branch = true
source = ["ichrisbirch"]
omit = ["ichrisbirch/alembic"]

[tool.coverage.paths]
source = ["ichrisbirch"]

[tool.coverage.report]
fail_under = 25
show_missing = true
exclude_lines = ["pragma: no cover"]

[tool.djlint]
profile = "jinja"
max_line_length = 140
max_attribute_length = 140
blank_line_after_tag = "endblock, extends"
# blank_line_before_tag="include"
format_attribute_template_tags = false
max_blank_lines = 1

[tool.docformatter]
recursive = true
in-place = true
exclude = ["alembic", ".git", ".mypy_cache", ".venv", "build", "dist"]
wrap-summaries = 140
wrap-descriptions = 140
close-quotes-on-newline = true
blank = false


[tool.mypy]
pretty = true
ignore_missing_imports = true
# strict = true
check_untyped_defs = false
plugins = ["pydantic.mypy"]
warn_return_any = false


[tool.pyright]
analyzeUnannotatedFunctions = true    # needed or pylance does not work in vscode
reportAny = false
reportImplicitOverride = false
reportMissingParameterType = false
reportMissingTypeArgument = false
reportMissingTypeStubs = false
reportPossiblyUnboundVariable = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnusedCallResult = false


[tool.pytest.ini_options]
addopts = "-vv"
minversion = "6.0"
testpaths = ["tests"]


[tool.refurb]
enable_all = true
ignore = ["FURB184"]


[tool.ruff]
line-length = 140
exclude = [
    "alembic",
    ".git",
    "__pycache__",
    ".mypy_cache",
    ".ruff_cache",
    ".vscode",
    ".venv",
    " build",
    "dist",
]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = [
    "fastapi.Depends",
    "fastapi.params.Depends",
    "fastapi.Query",
    "fastapi.params.Query",
]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = ["SIM108"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"env.py" = ["F401"]

# ---------- Build System ---------- #


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
