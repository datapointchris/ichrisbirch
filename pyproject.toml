[tool.poetry]
name = "ichrisbirch"
version = "0.9.0"
description = "Playground for making fun and silly things"
authors = ["Chris Birch <datapointchris@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/datapointchris/ichrisbirch"
homepage = "https://www.ichrisbirch.com"
documentation = "https://docs.ichrisbirch.com"


# ---------- Dependencies ---------- #


[tool.poetry.dependencies]
alembic = "^1.13.1"
apscheduler = "^3.10.4"
attrs = "^23.2.0"
beautifulsoup4 = "^4.12.3"
boto3 = "^1.34.98"
colorama = "^0.4.6"
fastapi = "^0.111.0"
Flask = "^3.0.3"
flask-login = "^0.6.3"
flask-wtf = "^1.2.1"
gunicorn = "^22.0.0"
httpx = "^0.27.0"
hvplot = "^0.10.0"
openai = "^1.32.0"
pendulum = "^3.0.0"
polars = "^0.20.31"
psycopg = "^3.1.19"
psycopg2 = "^2.9.9"
pyarrow = "^16.1.0"
pydantic = "^2.7.1"
pygtail = "^0.14.0"
pyjwt = "^2.8.0"
python = "^3.12"
python-dotenv = "^1.0.1"
python-json-logger = "^2.0.7"
requests = "^2.31.0"
sqlalchemy = "^2.0.29"
sqlalchemy-json = "^0.7.0"
strenum = "^0.4.15"
uvicorn = "^0.29.0"
youtube-transcript-api = "^0.6.2"
customtkinter = "^5.2.2"
tkhtmlview = "^0.3.1"
streamlit = "^1.41.1"
redis = "^5.2.1"
streamlit-cookies-controller = "^0.0.4"

[tool.poetry.group.dev.dependencies]
boto3-stubs = { extras = ["essential"], version = "^1.34.98" }
deptry = "^0.16.1"
jupyter = "^1.0.0"
jupyterthemes = "^0.20.0"
livereload = "^2.6.3"
mkdocs-material = "^9.5.20"
pandas = "^2.2.2"
pre-commit = "^3.7.0"
pymdown-extensions = "^10.8.1"
pyyaml = "^6.0.1"
types-requests = "^2.31.0.20240406"
wily = "^1.25.0"
ruff = "^0.7.0"
types-redis = "^4.6.0.20241004"

[tool.poetry.group.cicd.dependencies]
bandit = "^1.7.8"
black = "^24.4.2"
coverage = "^7.5.0"
docformatter = "^1.7.5"
docker = "^7.0.0"
Faker = "^25.0.1"
flake8 = "^7.0.0"
interrogate = "^1.7.0"
isort = "^5.13.2"
mypy = "^1.10.0"
pytest = "^8.2.0"
pytest-asyncio = "^0.23.6"
pytest-cov = "^5.0.0"
pytest-md = "^0.2.0"
pytest-playwright = "^0.4.4"

[tool.poetry.group.prod.dependencies]
Markdown = "^3.6"
pydeps = "^1.12.20"


# ---------- Configurations ---------- #


[tool.bandit]
exclude_dirs = ["tests", "scripts"]
skips = ["B113", "B311"]


[tool.black]
line-length = 120
skip-string-normalization = true
exclude = '''
(
/alembic
| .git
| .mypy_cache
| .venv
| build
| dist
)
'''

[tool.codespell]
skip = '*.css.map,*chat_history.json'
ignore-words-list = "astroid,aNULL,ANULL,anull,iterm"
exclude-file = "poetry.lock"
check-filenames = true
# count = ""
# quiet-level = 3


[tool.coverage.run]
parallel = true
branch = true
source = ["ichrisbirch"]
omit = ["ichrisbirch/alembic"]

[tool.coverage.paths]
source = ["ichrisbirch"]

[tool.coverage.report]
fail_under = 25
show_missing = true
exclude_lines = ["pragma: no cover"]


[tool.docformatter]
recursive = true
in-place = true
exclude = ["alembic", ".git", ".mypy_cache", ".venv", "build", "dist"]
wrap-summaries = 120
wrap-descriptions = 120
close-quotes-on-newline = true
blank = false


[tool.isort]
line_length = 120
profile = "black"
atomic = true
force_single_line = true
skip = [".gitignore"]
extend_skip = [".md", ".json"]


[tool.mypy]
pretty = true
ignore_missing_imports = true
# strict = true
check_untyped_defs = false  # Can enable this when all the routes are updated
plugins = ["pydantic.mypy"]
warn_return_any = false


[tool.pyright]
analyzeUnannotatedFunctions = true # needed or pylance does not work in vscode
reportAny = false
reportImplicitOverride = false
reportMissingParameterType = false
reportMissingTypeArgument = false
reportMissingTypeStubs = false
reportPossiblyUnboundVariable = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnusedCallResult = false


[tool.pytest.ini_options]
addopts = "-v"
minversion = "6.0"
testpaths = ["tests"]


[tool.refurb]
enable_all = true
ignore = ["FURB184"]


[tool.ruff]
line-length = 120

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
extend-select = ["I"]
ignore = []

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"env.py" = ["F401"]

# ---------- Build System ---------- #


[build-system]
requires = ["poetry-core=>1.7.1"]
build-backend = "poetry.core.masonry.api"
